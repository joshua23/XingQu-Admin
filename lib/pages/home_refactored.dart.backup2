import 'package:flutter/material.dart';
import 'dart:ui'; // 添加毛玻璃效果支持
import '../theme/app_theme.dart';
import '../widgets/status_bar.dart';
import 'home_tabs/home_selection_page.dart';
import 'home_tabs/home_comprehensive_page.dart';
import 'home_tabs/home_fm_page.dart';
import 'home_tabs/home_assistant_page.dart';

/// 重构后的首页Widget - 基于原型文件的4个Tab页模式
/// 包含精选、综合、FM、助理四个子页面
class HomeRefactored extends StatefulWidget {
  const HomeRefactored({super.key});

  @override
  State<HomeRefactored> createState() => _HomeRefactoredState();
}

/// 首页状态类 - 管理Tab页切换和顶部导航
class _HomeRefactoredState extends State<HomeRefactored>
    with TickerProviderStateMixin {
  // Tab控制器
  late TabController _tabController;
  int _currentTabIndex = 3; // 默认选中"精选"tab

  // 4个Tab页配置 - 按照原型顺序：助理、FM、综合、精选
  final List<String> _tabTitles = ['助理', 'FM', '综合', '精选'];
  final List<Widget> _tabPages = [
    const HomeAssistantPage(),
    const HomeFMPage(),
    const HomeComprehensivePage(),
    const HomeSelectionPage(),
  ];

  @override
  void initState() {
    super.initState();
    _tabController = TabController(
      length: _tabTitles.length,
      vsync: this,
      initialIndex: 3, // 默认选中"精选"tab
    );
    _tabController.addListener(_onTabChanged);
  }

  @override
  void dispose() {
    _tabController.removeListener(_onTabChanged);
    _tabController.dispose();
    super.dispose();
  }

  /// Tab页变化监听
  void _onTabChanged() {
    if (_tabController.indexIsChanging) {
      setState(() {
        _currentTabIndex = _tabController.index;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.transparent, // 移除背景色，让背景图片显示
      body: Stack(
        children: [
          // 背景图片覆盖整个屏幕
          Positioned.fill(
            child: Image.asset(
              'assets/images/image.png',
              fit: BoxFit.cover,
              alignment: Alignment.topCenter,
              errorBuilder: (context, error, stackTrace) {
                debugPrint('❌ 背景图片加载失败: $error');
                return Container(
                  color: Colors.red.withOpacity(0.3),
                  child: const Center(
                    child: Text(
                      '图片加载失败',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                  ),
                );
              },
            ),
          ),
          
          // 主要内容
          Column(
            children: [
              // Tab标签栏 - 半透明毛玻璃效果
              _buildTabBarWithBlur(),
              
              // Tab页面内容
              Expanded(
                child: TabBarView(
                  controller: _tabController,
                  children: _tabPages,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }



  /// 构建Tab标签栏 - 包含Tab标签和右侧操作图标，完全透明
  Widget _buildTabBarWithBlur() {
    return Container(
      height: 48,
      padding: const EdgeInsets.symmetric(horizontal: 20),
      decoration: BoxDecoration(
        color: Colors.transparent, // 完全透明
      ),
          child: Row(
            children: [
              // 左侧Tab标签
              Expanded(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: _tabTitles.asMap().entries.map((entry) {
                    final index = entry.key;
                    final title = entry.value;
                    final isActive = _currentTabIndex == index;
                    
                    return GestureDetector(
                      onTap: () {
                        _tabController.animateTo(index);
                      },
                      child: Container(
                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                        margin: const EdgeInsets.only(right: 8),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              title,
                              style: TextStyle(
                                color: isActive ? Colors.white : const Color(0xFF8E8E93),
                                fontSize: 16,
                                fontWeight: FontWeight.w500,
                              ),
                            ),
                            if (isActive)
                              Container(
                                margin: const EdgeInsets.only(top: 4),
                                width: 24,
                                height: 2,
                                decoration: BoxDecoration(
                                  color: Colors.white,
                                  borderRadius: BorderRadius.circular(1),
                                ),
                              ),
                          ],
                        ),
                      ),
                    );
                  }).toList(),
                ),
              ),
              
              // 右侧操作图标
              Row(
                children: [
                  Icon(
                    Icons.search,
                    color: Colors.white,
                    size: 20,
                  ),
                  const SizedBox(width: 16),
                  Icon(
                    Icons.menu,
                    color: Colors.white,
                    size: 20,
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}